{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserById","userId","usersFromServer","find","getTodos","App","useState","setTodos","setTitle","hasTitleError","setHasTitleError","userName","setUserName","hasUserNameError","setHasUserNameError","action","method","onSubmit","event","preventDefault","biggestId","Math","max","newTodo","currentTodo","type","placeholder","value","onChange","target","disabled","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48d2cb41.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../tipes/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { FullTodo } from '../../tipes/Todo';\n\ninterface Props {\n  todo: FullTodo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo',\n        { 'TodoInfo--completed': completed })}\n    >\n\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { FullTodo } from '../../tipes/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: FullTodo[],\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { ChangeEvent, FormEvent, useState } from 'react';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { FullTodo } from './tipes/Todo';\nimport { User } from './tipes/User';\nimport { TodoList } from './components/TodoList';\n\nconst getUserById = (userId: number): User | null => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n\nconst getTodos: FullTodo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<FullTodo[]>(getTodos);\n\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userName, setUserName] = useState(0);\n  const [hasUserNameError, setHasUserNameError] = useState(false);\n\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    setUserName(+event.target.value);\n    setHasUserNameError(false);\n  };\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setUserName(0);\n  };\n\n  const handleFormSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    const biggestId: number = Math.max(...todos.map(todo => todo.id));\n\n    setHasTitleError(!title);\n    setHasUserNameError(!userName);\n\n    const newTodo = {\n      id: biggestId + 1,\n      title,\n      completed: false,\n      userId: +userName,\n      user: getUserById(+userName),\n    };\n\n    if (userName && title) {\n      setTodos(currentTodo => [...currentTodo, newTodo]);\n      resetForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          Title:\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleInput}\n          />\n\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n\n        </div>\n\n        <div className=\"field\">\n          User:\n          <select\n            data-cy=\"userSelect\"\n            value={userName}\n            onChange={handleSelect}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(item => (\n              <option\n                key={item.id}\n                value={item.id}\n              >\n                {item.name}\n              </option>\n            ))}\n\n          </select>\n\n          {hasUserNameError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}